{
	// Place your durak_app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"JsonGenerate": {
		"scope": "dart",
		"prefix": "!",
		"description": "Make sure u add: part 'generated/<file-name>.g.dart';",
		"body": [
			"factory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}.fromJson(Map<String, dynamic> json) => _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}FromJson(json);",
			"Map<String, dynamic> toJson() => _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}ToJson(this);"
		]
	},
	"JsonGenerateFull": {
		"scope": "dart",
		"prefix": "!",
		"description": "Generates full class",
		"body": [
			"import 'package:json_annotation/json_annotation.dart';",
			"",
			"part 'generated/${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}.g.dart';",
			"",
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} {",
			"",
			"",
			"\tfactory ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}.fromJson(Map<String, dynamic> json) => _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}FromJson(json);",
			"\tMap<String, dynamic> toJson() => _$${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}ToJson(this);",
			"}"
		]
	} 
}